var numberUtil = {
     numberFormat: function (value, length) {
          var v = parseInt(value)//强转Int，毕竟有可能返回是String类型的数字
          return v.toFixed(length)
     }
}
/**
 * 时间戳转化为年 月 日 时 分 秒
 * number: 传入时间戳
 * format：返回格式，支持自定义，但参数必须与formateArr里保持一致
 */
function formatTime(number, format) {
     var formateArr  = ['Y','M','D','h','m','s'];
     var returnArr   = [];

     var date = getDate(number * 1000);
     returnArr.push(date.getFullYear());
     returnArr.push(formatNumber(date.getMonth() + 1));
     returnArr.push(formatNumber(date.getDate()));

     returnArr.push(formatNumber(date.getHours()));
     returnArr.push(formatNumber(date.getMinutes()));
     returnArr.push(formatNumber(date.getSeconds()));
     for (var i=0; i < returnArr.length; i++) {
          format = format.replace(formateArr[i], returnArr[i]);
     }
     return format;
}
//数据转化
function formatNumber(n) {
     n = n.toString()
     return n[1] ? n : '0' + n
}
/**
 * 根据两个地点的经纬度计算直线距离
 * approx distance between two points on earth ellipsoid
 * @param {Object} lng1
 * @param {Object} lat1
 * @param {Object} lng2
 * @param {Object} lat2
 */
function getFlatternDistance(lat1, lng1, lat2, lng2) {
     var radLat1 = lat1*Math.PI / 180.0;
     var radLat2 = lat2*Math.PI / 180.0;
     var a = radLat1 - radLat2;
     var  b = lng1*Math.PI / 180.0 - lng2*Math.PI / 180.0;
     var s = 2 * Math.asin(Math.sqrt(Math.pow(Math.sin(a/2),2) +
     Math.cos(radLat1)*Math.cos(radLat2)*Math.pow(Math.sin(b/2),2)));
     s = s *6378.137 ;// EARTH_RADIUS;
     s = Math.round(s * 10000) / 10000;
     if(s > 1) {
          return s.toFixed(1)+"km";
     } else {
          s = s*1000;
          return s.toFixed(1)+"m";
     }
}
function stringToArray(str) {
     var arr = str.split(',');
     return arr[1] + " " + arr[2];
}


// 暴露接口调用
module.exports = {
     numberFormat: numberUtil.numberFormat,
     formatTime: formatTime,
     flatternDistance: getFlatternDistance,
     stringToArray: stringToArray,
}